<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0</version>
    </parent>

    <groupId>com.damo</groupId>
    <artifactId>pulsar-otel</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>pulsar-otel</name>
    <description>Spring Boot kotlin, Apache Pulsar project to enable open-telemetry instrumentation manual testing</description>

    <properties>
        <java.version>17</java.version>
        <kotlin.version>1.8.21</kotlin.version>
        <pulsar.version>2.11.1</pulsar.version>
        <kotlin-logging.version>2.0.11</kotlin-logging.version>
        <kotlinx-coroutines-core.version>1.7.1</kotlinx-coroutines-core.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <opentelemetry-javaagent.version>1.26.0</opentelemetry-javaagent.version>
        <opentelemetry-instrumentation.version>1.26.0</opentelemetry-instrumentation.version>
        <opentelemetry-instrumentation-annotations.version>1.26.0</opentelemetry-instrumentation-annotations.version>
        <jib.platform-arch>amd64</jib.platform-arch>
        <jib.platform-os>linux</jib.platform-os>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-jdk8</artifactId>
            <version>${kotlinx-coroutines-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core-jvm</artifactId>
            <version>${kotlinx-coroutines-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>tech.codingzen</groupId>
            <artifactId>kata-result</artifactId>
            <version>2.2.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>kotlinx-coroutines-core</artifactId>
                    <groupId>org.jetbrains.kotlinx</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-client</artifactId>
            <version>${pulsar.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>${kotlin-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-extension-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-instrumentation-annotations</artifactId>
            <version>${opentelemetry-instrumentation-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <version>${opentelemetry-javaagent.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${opentelemetry-instrumentation.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <sourceDirectory>src/main/kotlin</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <from>
                        <image>docker.io/eclipse-temurin:17.0.7_7-jre-jammy</image>
                        <platforms>
                            <platform>
                                <architecture>${jib.platform-arch}</architecture>
                                <os>${jib.platform-os}</os>
                            </platform>
                        </platforms>
                    </from>
                    <to>
                        <image>${project.name}:${project.version}</image>
                    </to>
                    <extraDirectories>
                        <paths>
                            <!-- Add files in src/main/jib to the docker image. -->
                            <path>src/main/jib</path>
                            <!-- Add the OpenTelemetry agent jar to the docker image -->
                            <path>
                                <from>${project.build.directory}/otel</from>
                                <into>/app/otel</into>
                            </path>
                            <path>
                                <from>pulsar</from>
                                <into>/pulsar</into>
                            </path>
                        </paths>
                        <permissions>
                            <permission>
                                <file>/app/entrypoint.sh</file>
                                <mode>755</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>
                    <container>
                        <ports>
                            <port>8080</port>
                        </ports>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <environment>
                            <!-- NOTE: APP_VERSION will be overridden by Pipeline's k8s Deployment,
                             putting it here will make sure it's set if run locally -->
                            <APP_VERSION>${project.version}</APP_VERSION>
                            <OTEL_SERVICE_NAME>${project.name}</OTEL_SERVICE_NAME>
                            <!-- supply default JVM options via JAVA_TOOL_OPTIONS -->
                            <JAVA_TOOL_OPTIONS>-XX:+UseG1GC -XX:MaxRAMPercentage=75.0 -javaagent:/app/otel/opentelemetry-javaagent.jar</JAVA_TOOL_OPTIONS>
                            <!-- JDK_JAVA_OPTIONS is for java launcher options (Java 9+) -->
                            <JDK_JAVA_OPTIONS>-server</JDK_JAVA_OPTIONS>
                        </environment>
                    </container>
                </configuration>
            </plugin>
            <!-- Extract the New  Relic agent jar from the zip file provided from the repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>copy-otel</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.opentelemetry.javaagent</groupId>
                                    <artifactId>opentelemetry-javaagent</artifactId>
                                    <version>${opentelemetry-javaagent.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <!-- rename the Jar so it doesn't have the otel version num -->
                                    <destFileName>opentelemetry-javaagent.jar</destFileName>
                                    <outputDirectory>${project.build.directory}/otel</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
